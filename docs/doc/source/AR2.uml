@startuml
Controller --> Joint
Programmer --> Controller
Controller --> Program
Programmer --> Program
Program    --> Program_line
Program_line --> servo_data
Program_line --> move_data

Gui --> Programmer
Controller --> Serial_communications

class Gui {
  Object noteBook
  Object Tab1
  Object Tab2
  Object Tab3
  
  __init__()
  createTab1()
  createTab2()
  createTab3()
}

class Joint {
   int CurrentAngle
   int CurrentStep
   float AngleLimitPositive
   float AngleLimitNegative
   float DegreePerSTep
   
   __init__()
   step_positive()
   step_negative()
}

class Programmer {
  Program program
  int numberOfLines
  int CurrentLine
  
  
  __init__()
  addCommand()
  removeCommand()
  runProgramm()
  stopProgramm()
  calibrateRobot()
  savePositionData()
  execureRow()
  stepForward()
  stepBackwars()
  teachInsertBelSelected()
  teachReplaceSelected()
  teachFineCal()
  manAddItem()

}

class Program {
  int NumberOfCommands
  int CurrentCommand
  List commands
  
}

class Program_line {
  int _ID
  string description
  string protocol
  var data
  string comment 
}

class move_data {
  int Joint_position[]
  string movement_type
  int acceleration
  int deceleration
}

class servo_data {
  int servo_number
  bool state
}

class Controller {
  Joint Joints
  
  __init__()
  forwardKinetics()
  backwardKinetics()
  jogJointAngle()
  jogPosition()
  ServoOn()
  ServoOff()
  DO
}

class Serial_communications {
  serial Serial
  int port_number
  string port_name
  int BautRate
  
  __init__()
  openCom()
  closeCom()
  
}
@enduml